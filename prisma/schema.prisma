generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Estudante {
  id              Int      @id @default(autoincrement())
  nomeCompleto    String
  turma           String
  curso           String
  numeroEstudante String
  modalidade      String
  dataUtilizacao  DateTime
  horario         String
  periodo         String
  telefone        String
  status          String   @default("pendente")
}

model Externo {
  id             Int      @id @default(autoincrement())
  nomeCompleto   String
  contacto       String
  email          String
  dataUtilizacao DateTime
  horario        String
  periodo        String
  modalidade     String
  status         String   @default("pendente")
}

model Equipe {
  id                          Int                  @id @default(autoincrement())
  nome                        String
  categoria                   String
  Jogo_Jogo_equipaAIdToEquipe Jogo[]               @relation("Jogo_equipaAIdToEquipe")
  Jogo_Jogo_equipaBIdToEquipe Jogo[]               @relation("Jogo_equipaBIdToEquipe")
  ParticipacaoEquipe          ParticipacaoEquipe[]
}

model Evento {
  id                 Int                  @id @default(autoincrement())
  nome               String
  contacto           String
  email              String
  tipoEvento         String
  dataInicio         DateTime
  dataFim            DateTime
  formato            String
  estado             String               @default("planeado")
  criadoEm           DateTime             @default(now())
  Jogo               Jogo[]
  Marcacao           Marcacao[]
  ParticipacaoEquipe ParticipacaoEquipe[]
}

model Jogo {
  id                            Int       @id @default(autoincrement())
  eventoId                      Int
  equipaAId                     Int
  equipaBId                     Int
  resultado                     String?
  Equipe_Jogo_equipaAIdToEquipe Equipe    @relation("Jogo_equipaAIdToEquipe", fields: [equipaAId], references: [id])
  Equipe_Jogo_equipaBIdToEquipe Equipe    @relation("Jogo_equipaBIdToEquipe", fields: [equipaBId], references: [id])
  Evento                        Evento    @relation(fields: [eventoId], references: [id])
  Marcacao                      Marcacao?
}

model Marcacao {
  id         Int      @id @default(autoincrement())
  eventoId   Int
  titulo     String
  tipo       String
  dataInicio DateTime
  dataFim    DateTime
  jogoId     Int?     @unique
  criadoEm   DateTime @default(now())
  Evento     Evento   @relation(fields: [eventoId], references: [id])
  Jogo       Jogo?    @relation(fields: [jogoId], references: [id])
}

model ParticipacaoEquipe {
  id       Int    @id @default(autoincrement())
  eventoId Int
  equipeId Int
  Equipe   Equipe @relation(fields: [equipeId], references: [id])
  Evento   Evento @relation(fields: [eventoId], references: [id])
}

model Technician {
  id            Int     @id @default(autoincrement())
  nome          String
  especialidade String
  disponivel    Boolean @default(true)
}

model User {
  id              Int    @id @default(autoincrement())
  nome            String
  numeroEstudante String @unique
  fullemail       String? @unique
  senha           String
  contacto        String
}